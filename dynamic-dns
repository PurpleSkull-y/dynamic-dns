# History of a ip to make a comparation
ip_file="./ip.txt"
# Text file where all the credentials will be stored
data_file="./data.txt"
# Logs of the dynamic dns status and changes
logs_file="./log.txt"

# API service to get the public ip
ip0=$(curl -s https://ipinfo.io/ip)
ip1=0

# Check if the file ip.txt exists
if [ -e "$ip_file" ]; then

	source "$ip_file"

# If the files doesn't exist, creates it with the template of it
else

	echo "ip1=$ip0" > "$ip_file"

 fi

# Check if the file data.txt exists
if [ -e "$data_file" ]; then


	source "$data_file"
#Creates array of the hosts
readarray -t host_list < <(grep "host[0-9]" $data_file | cut -d "=" -f 2)

# If the files doesn't exist, creates it with the template of it
else
	echo "# for more information read https://www.namecheap.com/support/knowledgebase/article.aspx/29/11/how-to-dynamically-update-the-hosts-ip-with-an-https-request/" > "$data_file" 
	echo "host1=insert-your-host1" >> "$data_file"
	echo "host2=insert-your-host2" >> "$data_file"
	echo "domain_name=insert-your-domain-name" >> "$data_file"
	echo "ddns_password=insert-your-dynamic-dns-token" >> "$data_file"

fi


for host in "${host_list[@]}"; do

	if [ $ip0 != $ip1 ] && [ $ip1 != 0 ]; then

		echo "The current ip ($ip1) has changed, sending update request to the DNS server with the new ip($ip0)..."
		echo "Please wait..."
		curl "https://dynamicdns.park-your-domain.com/update?host=$host&domain=$domain_name&password=$ddns_password"
		echo "ip1=$ip0" > "$ip_file"

	else

		echo "No new ip detected for the host $host, nothing to do."
		

	fi
done


